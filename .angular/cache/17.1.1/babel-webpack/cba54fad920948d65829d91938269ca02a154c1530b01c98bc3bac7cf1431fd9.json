{"ast":null,"code":"import { map } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"app/core/services/olympic.service\";\nexport class CountryComponent {\n  constructor(route, olympicService) {\n    this.route = route;\n    this.olympicService = olympicService;\n  }\n  ngOnInit() {\n    //recuperation de l'info dans l'url\n    const countryLabel = this.route.snapshot.params['country'];\n    //recuperation de l'objet contenant les infos du pays\n    /*     this.olympicService.getOlympics().pipe(tap\n          (data => {this.countryInfo = data.find (value => value.country = countryLabel)})).subscribe()\n     */\n    this.chartData = this.olympicService.getDataByCountry(countryLabel).pipe(map(value => value[0].participations.map(participation => {\n      return {\n        name: participation.year,\n        value: participation.medalsCount\n      };\n    })));\n  }\n  static #_ = this.ɵfac = function CountryComponent_Factory(t) {\n    return new (t || CountryComponent)(i0.ɵɵdirectiveInject(i1.ActivatedRoute), i0.ɵɵdirectiveInject(i2.OlympicService));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: CountryComponent,\n    selectors: [[\"app-country\"]],\n    decls: 4,\n    vars: 2,\n    template: function CountryComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"p\");\n        i0.ɵɵtext(1);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(2, \"p\");\n        i0.ɵɵtext(3);\n        i0.ɵɵelementEnd();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance();\n        i0.ɵɵtextInterpolate1(\"country works! \", ctx.countryInfo == null ? null : ctx.countryInfo.participations, \"\");\n        i0.ɵɵadvance(2);\n        i0.ɵɵtextInterpolate(ctx.chartData);\n      }\n    },\n    styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"names":["map","CountryComponent","constructor","route","olympicService","ngOnInit","countryLabel","snapshot","params","chartData","getDataByCountry","pipe","value","participations","participation","name","year","medalsCount","_","i0","ɵɵdirectiveInject","i1","ActivatedRoute","i2","OlympicService","_2","selectors","decls","vars","template","CountryComponent_Template","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵtextInterpolate1","countryInfo","ɵɵtextInterpolate"],"sources":["C:\\Users\\MBD7C62N\\Repo Git\\python\\Developpez-le-front-end-en-utilisant-Angular\\src\\app\\country\\country.component.ts","C:\\Users\\MBD7C62N\\Repo Git\\python\\Developpez-le-front-end-en-utilisant-Angular\\src\\app\\country\\country.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { ActivatedRoute, OutletContext } from '@angular/router';\r\nimport { Olympic } from 'app/core/models/olympic';\r\nimport { OlympicService } from 'app/core/services/olympic.service';\r\nimport { valueOrDefault } from 'chart.js/dist/helpers/helpers.core';\r\nimport { Observable, filter, map, tap } from 'rxjs';\r\nimport { NgxChartsModule } from '@swimlane/ngx-charts';\r\n\r\n\r\n@Component({\r\n  selector: 'app-country',\r\n  standalone: false,\r\n // imports: [],\r\n  templateUrl: './country.component.html',\r\n  styleUrl: './country.component.scss'\r\n})\r\nexport class CountryComponent implements OnInit{\r\n\r\n  public countryInfo!: Olympic | undefined\r\n  public chartData!: Observable<{}>\r\n\r\n  constructor(private route: ActivatedRoute,\r\n              private olympicService: OlympicService) {}\r\n\r\n\r\n  ngOnInit(): void {\r\n      \r\n    //recuperation de l'info dans l'url\r\n    const countryLabel = this.route.snapshot.params['country']\r\n\r\n    //recuperation de l'objet contenant les infos du pays\r\n\r\n/*     this.olympicService.getOlympics().pipe(tap\r\n      (data => {this.countryInfo = data.find (value => value.country = countryLabel)})).subscribe()\r\n */\r\n      this.chartData = this.olympicService.getDataByCountry(countryLabel).pipe(map(value =>  value[0].participations.map(participation => {return {\r\n        name:participation.year,\r\n        value:participation.medalsCount}\r\n      })))\r\n  }\r\n\r\n}\r\n","<p>country works! {{countryInfo?.participations}}</p>\r\n\r\n<p>{{ chartData }}</p>\r\n\r\n"],"mappings":"AAMA,SAA6BA,GAAG,QAAa,MAAM;;;;AAWnD,OAAM,MAAOC,gBAAgB;EAK3BC,YAAoBC,KAAqB,EACrBC,cAA8B;IAD9B,KAAAD,KAAK,GAALA,KAAK;IACL,KAAAC,cAAc,GAAdA,cAAc;EAAmB;EAGrDC,QAAQA,CAAA;IAEN;IACA,MAAMC,YAAY,GAAG,IAAI,CAACH,KAAK,CAACI,QAAQ,CAACC,MAAM,CAAC,SAAS,CAAC;IAE1D;IAEJ;;;IAGM,IAAI,CAACC,SAAS,GAAG,IAAI,CAACL,cAAc,CAACM,gBAAgB,CAACJ,YAAY,CAAC,CAACK,IAAI,CAACX,GAAG,CAACY,KAAK,IAAKA,KAAK,CAAC,CAAC,CAAC,CAACC,cAAc,CAACb,GAAG,CAACc,aAAa,IAAG;MAAE,OAAO;QAC1IC,IAAI,EAACD,aAAa,CAACE,IAAI;QACvBJ,KAAK,EAACE,aAAa,CAACG;OAAY;IAClC,CAAC,CAAC,CAAC,CAAC;EACR;EAAC,QAAAC,CAAA,G;qBAvBUjB,gBAAgB,EAAAkB,EAAA,CAAAC,iBAAA,CAAAC,EAAA,CAAAC,cAAA,GAAAH,EAAA,CAAAC,iBAAA,CAAAG,EAAA,CAAAC,cAAA;EAAA;EAAA,QAAAC,EAAA,G;UAAhBxB,gBAAgB;IAAAyB,SAAA;IAAAC,KAAA;IAAAC,IAAA;IAAAC,QAAA,WAAAC,0BAAAC,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;QCjB7BZ,EAAA,CAAAc,cAAA,QAAG;QAAAd,EAAA,CAAAe,MAAA,GAA8C;QAAAf,EAAA,CAAAgB,YAAA,EAAI;QAErDhB,EAAA,CAAAc,cAAA,QAAG;QAAAd,EAAA,CAAAe,MAAA,GAAe;QAAAf,EAAA,CAAAgB,YAAA,EAAI;;;QAFnBhB,EAAA,CAAAiB,SAAA,EAA8C;QAA9CjB,EAAA,CAAAkB,kBAAA,oBAAAL,GAAA,CAAAM,WAAA,kBAAAN,GAAA,CAAAM,WAAA,CAAAzB,cAAA,KAA8C;QAE9CM,EAAA,CAAAiB,SAAA,GAAe;QAAfjB,EAAA,CAAAoB,iBAAA,CAAAP,GAAA,CAAAvB,SAAA,CAAe"},"metadata":{},"sourceType":"module","externalDependencies":[]}