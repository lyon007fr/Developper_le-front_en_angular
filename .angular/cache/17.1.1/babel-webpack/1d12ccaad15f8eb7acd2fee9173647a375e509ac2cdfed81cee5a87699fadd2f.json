{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { map } from 'rxjs';\nlet CountryComponent = class CountryComponent {\n  constructor(route, olympicService, router) {\n    this.route = route;\n    this.olympicService = olympicService;\n    this.router = router;\n    this.chartData = [];\n    //chartConf\n    this.legend = true;\n    this.showLabels = true;\n    this.animations = true;\n    this.xAxis = true;\n    this.yAxis = true;\n    this.showYAxisLabel = true;\n    this.showXAxisLabel = true;\n    this.xAxisLabel = 'Year';\n    this.yAxisLabel = 'Population';\n    this.timeline = true;\n    this.colorScheme = {\n      domain: ['#5AA454', '#E44D25', '#CFC0BB', '#7aa3e5', '#a8385d', '#aae3f5']\n    };\n  }\n  ngOnInit() {\n    //recuperation de l'info dans l'url\n    const countryLabel = this.route.snapshot.params['country'].charAt(0).toUpperCase() + this.route.snapshot.params['country'].slice(1);\n    //countryLabel = countryLabel.charAt(0).toUpperCase() + countryLabel.slice(1)\n    console.log(countryLabel);\n    //recuperation de l'objet contenant les infos du pays\n    this.olympicService.getDataByCountry(countryLabel).pipe(map(value => this.chartData.push({\n      name: countryLabel,\n      series: value[0].participations.map(value => {\n        return {\n          name: value.year.toString(),\n          value: value.medalsCount\n        };\n      })\n    }))).subscribe(value => console.log(this.chartData));\n  }\n};\nCountryComponent = __decorate([Component({\n  selector: 'app-country',\n  templateUrl: './country.component.html',\n  styleUrl: './country.component.scss'\n})], CountryComponent);\nexport { CountryComponent };","map":{"version":3,"names":["Component","map","CountryComponent","constructor","route","olympicService","router","chartData","legend","showLabels","animations","xAxis","yAxis","showYAxisLabel","showXAxisLabel","xAxisLabel","yAxisLabel","timeline","colorScheme","domain","ngOnInit","countryLabel","snapshot","params","charAt","toUpperCase","slice","console","log","getDataByCountry","pipe","value","push","name","series","participations","year","toString","medalsCount","subscribe","__decorate","selector","templateUrl","styleUrl"],"sources":["C:\\Users\\MBD7C62N\\Repo Git\\python\\Developpez-le-front-end-en-utilisant-Angular\\src\\app\\country\\country.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute, OutletContext, Router } from '@angular/router';\r\nimport { Olympic } from 'app/core/models/olympic';\r\nimport { OlympicService } from 'app/core/services/olympic.service';\r\nimport { Observable, filter, map, tap } from 'rxjs';\r\nimport { NgxChartsModule} from '@swimlane/ngx-charts';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\n\r\n\r\n@Component({\r\n  selector: 'app-country',\r\n  templateUrl: './country.component.html',\r\n  styleUrl: './country.component.scss'\r\n})\r\nexport class CountryComponent implements OnInit{\r\n\r\n  public countryInfo!: Olympic | undefined\r\n  public chartData: {\"name\":string, \"series\":{}[]}[] = []\r\n\r\n  constructor(private route: ActivatedRoute,\r\n              private olympicService: OlympicService,\r\n              private router: Router) {}\r\n\r\n\r\n  //chartConf\r\n  \r\n  legend: boolean = true;\r\n  showLabels: boolean = true;\r\n  animations: boolean = true;\r\n  xAxis: boolean = true;\r\n  yAxis: boolean = true;\r\n  showYAxisLabel: boolean = true;\r\n  showXAxisLabel: boolean = true;\r\n  xAxisLabel: string = 'Year';\r\n  yAxisLabel: string = 'Population';\r\n  timeline: boolean = true;\r\n  colorScheme = {\r\n    domain: ['#5AA454', '#E44D25', '#CFC0BB', '#7aa3e5', '#a8385d', '#aae3f5']\r\n  };\r\n\r\n  ngOnInit(): void {\r\n      \r\n    //recuperation de l'info dans l'url\r\n    const countryLabel:string = this.route.snapshot.params['country'].charAt(0).toUpperCase() + this.route.snapshot.params['country'].slice(1)\r\n    //countryLabel = countryLabel.charAt(0).toUpperCase() + countryLabel.slice(1)\r\n        console.log(countryLabel)\r\n    \r\n    \r\n    \r\n\r\n    //recuperation de l'objet contenant les infos du pays\r\n       this.olympicService.getDataByCountry(countryLabel).pipe(\r\n       map(value => this.chartData.push({name:countryLabel,series:value[0].participations.map(value => {\r\n        return{\r\n          name: value.year.toString(),\r\n        value: value.medalsCount,\r\n        }\r\n       })})))\r\n       .subscribe(value => console.log(this.chartData))\r\n  }\r\n\r\n\r\n\r\n}\r\n"],"mappings":";AAAA,SAASA,SAAS,QAAgB,eAAe;AAIjD,SAA6BC,GAAG,QAAa,MAAM;AAU5C,IAAMC,gBAAgB,GAAtB,MAAMA,gBAAgB;EAK3BC,YAAoBC,KAAqB,EACrBC,cAA8B,EAC9BC,MAAc;IAFd,KAAAF,KAAK,GAALA,KAAK;IACL,KAAAC,cAAc,GAAdA,cAAc;IACd,KAAAC,MAAM,GAANA,MAAM;IAJnB,KAAAC,SAAS,GAAqC,EAAE;IAOvD;IAEA,KAAAC,MAAM,GAAY,IAAI;IACtB,KAAAC,UAAU,GAAY,IAAI;IAC1B,KAAAC,UAAU,GAAY,IAAI;IAC1B,KAAAC,KAAK,GAAY,IAAI;IACrB,KAAAC,KAAK,GAAY,IAAI;IACrB,KAAAC,cAAc,GAAY,IAAI;IAC9B,KAAAC,cAAc,GAAY,IAAI;IAC9B,KAAAC,UAAU,GAAW,MAAM;IAC3B,KAAAC,UAAU,GAAW,YAAY;IACjC,KAAAC,QAAQ,GAAY,IAAI;IACxB,KAAAC,WAAW,GAAG;MACZC,MAAM,EAAE,CAAC,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS;KAC1E;EAjBoC;EAmBrCC,QAAQA,CAAA;IAEN;IACA,MAAMC,YAAY,GAAU,IAAI,CAACjB,KAAK,CAACkB,QAAQ,CAACC,MAAM,CAAC,SAAS,CAAC,CAACC,MAAM,CAAC,CAAC,CAAC,CAACC,WAAW,EAAE,GAAG,IAAI,CAACrB,KAAK,CAACkB,QAAQ,CAACC,MAAM,CAAC,SAAS,CAAC,CAACG,KAAK,CAAC,CAAC,CAAC;IAC1I;IACIC,OAAO,CAACC,GAAG,CAACP,YAAY,CAAC;IAK7B;IACG,IAAI,CAAChB,cAAc,CAACwB,gBAAgB,CAACR,YAAY,CAAC,CAACS,IAAI,CACvD7B,GAAG,CAAC8B,KAAK,IAAI,IAAI,CAACxB,SAAS,CAACyB,IAAI,CAAC;MAACC,IAAI,EAACZ,YAAY;MAACa,MAAM,EAACH,KAAK,CAAC,CAAC,CAAC,CAACI,cAAc,CAAClC,GAAG,CAAC8B,KAAK,IAAG;QAC9F,OAAM;UACJE,IAAI,EAAEF,KAAK,CAACK,IAAI,CAACC,QAAQ,EAAE;UAC7BN,KAAK,EAAEA,KAAK,CAACO;SACZ;MACF,CAAC;IAAC,CAAC,CAAC,CAAC,CAAC,CACLC,SAAS,CAACR,KAAK,IAAIJ,OAAO,CAACC,GAAG,CAAC,IAAI,CAACrB,SAAS,CAAC,CAAC;EACrD;CAID;AAjDYL,gBAAgB,GAAAsC,UAAA,EAL5BxC,SAAS,CAAC;EACTyC,QAAQ,EAAE,aAAa;EACvBC,WAAW,EAAE,0BAA0B;EACvCC,QAAQ,EAAE;CACX,CAAC,C,EACWzC,gBAAgB,CAiD5B"},"metadata":{},"sourceType":"module","externalDependencies":[]}