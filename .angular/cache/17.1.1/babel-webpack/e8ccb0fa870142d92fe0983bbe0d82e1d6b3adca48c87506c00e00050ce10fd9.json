{"ast":null,"code":"import { of, map } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"app/core/services/olympic.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@swimlane/ngx-charts\";\nimport * as i4 from \"@angular/common\";\nconst _c0 = () => [500, 300];\nexport class HomeComponent {\n  constructor(olympicService, router) {\n    this.olympicService = olympicService;\n    this.router = router;\n    this.olympics$ = of([]);\n    this.yearsOfJo = new Set();\n  }\n  //fonction pour renvoyer l'utilisateur vers la page contenant les infos du pays\n  onSelect(event) {\n    if (event.label) {\n      //console.log('Chart clicked:', event)  ;\n      this.router.navigateByUrl(`country/${event.label}`);\n    } else {\n      this.router.navigateByUrl(`country/${event}`);\n    }\n  }\n  ngOnInit() {\n    //nombre de pays\n    this.olympics$ = this.olympicService.getOlympics();\n    //nombre de jo\n    this.olympics$.pipe(map(value => value.map(country => country.participations.forEach(participation => {\n      this.yearsOfJo.add(participation.year);\n    })))).subscribe();\n    //passer par le async\n    this.medal = this.olympicService.getMedalCount();\n  }\n  static #_ = this.ɵfac = function HomeComponent_Factory(t) {\n    return new (t || HomeComponent)(i0.ɵɵdirectiveInject(i1.OlympicService), i0.ɵɵdirectiveInject(i2.Router));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: HomeComponent,\n    selectors: [[\"app-home\"]],\n    decls: 20,\n    vars: 11,\n    consts: [[1, \"container\"], [1, \"row\", \"justify-content-center\"], [1, \"col-12\", \"d-flex\", \"justify-content-center\"], [1, \"border\", \"text-white\", \"rounded\", \"p-2\", 2, \"background-color\", \"teal\"], [1, \"d-flex\", \"justify-content-sm-center\"], [1, \"p-2\", \"bd-highlight\", \"text-center\", \"border\", \"border-info\", \"rounded\", \"m-3\"], [1, \"row\", \"justify-content-center\", 3, \"results\", \"legend\", \"labels\", \"view\", \"select\"]],\n    template: function HomeComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2)(3, \"div\")(4, \"h4\", 3);\n        i0.ɵɵtext(5, \"Medals per Country\");\n        i0.ɵɵelementEnd()()()();\n        i0.ɵɵelementStart(6, \"div\", 4)(7, \"div\", 5);\n        i0.ɵɵtext(8, \"Number of entries \");\n        i0.ɵɵelement(9, \"br\");\n        i0.ɵɵelementStart(10, \"b\");\n        i0.ɵɵtext(11);\n        i0.ɵɵpipe(12, \"async\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(13, \"div\", 5);\n        i0.ɵɵtext(14, \"total number medal \");\n        i0.ɵɵelement(15, \"br\");\n        i0.ɵɵelementStart(16, \"b\");\n        i0.ɵɵtext(17);\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(18, \"ngx-charts-pie-chart\", 6);\n        i0.ɵɵlistener(\"select\", function HomeComponent_Template_ngx_charts_pie_chart_select_18_listener($event) {\n          return ctx.onSelect($event);\n        });\n        i0.ɵɵpipe(19, \"async\");\n        i0.ɵɵelementEnd()();\n      }\n      if (rf & 2) {\n        let tmp_0_0;\n        i0.ɵɵadvance(11);\n        i0.ɵɵtextInterpolate((tmp_0_0 = i0.ɵɵpipeBind1(12, 6, ctx.olympics$)) == null ? null : tmp_0_0.length);\n        i0.ɵɵadvance(6);\n        i0.ɵɵtextInterpolate(ctx.yearsOfJo.size);\n        i0.ɵɵadvance();\n        i0.ɵɵproperty(\"results\", i0.ɵɵpipeBind1(19, 8, ctx.medal))(\"legend\", false)(\"labels\", true)(\"view\", i0.ɵɵpureFunction0(10, _c0));\n      }\n    },\n    dependencies: [i3.PieChartComponent, i4.AsyncPipe],\n    styles: [\"@media only screen and (max-width: 600px) {\\n  .d-flex[_ngcontent-%COMP%] {\\n    flex-direction: column;\\n    align-items: center;\\n  }\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvcGFnZXMvaG9tZS9ob21lLmNvbXBvbmVudC5zY3NzIiwid2VicGFjazovLy4vLi4vLi4vLi4vUmVwbyUyMEdpdC9weXRob24vRGV2ZWxvcHBlei1sZS1mcm9udC1lbmQtZW4tdXRpbGlzYW50LUFuZ3VsYXIvc3JjL2FwcC9wYWdlcy9ob21lL2hvbWUuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDSTtJQUNFLHNCQUFBO0lBQ0EsbUJBQUE7RUNDSjtBQUNGIiwic291cmNlc0NvbnRlbnQiOlsiQG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA2MDBweCkge1xyXG4gICAgLmQtZmxleCB7XHJcbiAgICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XHJcbiAgICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XHJcbiAgICB9XHJcbiAgfSIsIkBtZWRpYSBvbmx5IHNjcmVlbiBhbmQgKG1heC13aWR0aDogNjAwcHgpIHtcbiAgLmQtZmxleCB7XG4gICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xuICB9XG59Il0sInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"names":["of","map","HomeComponent","constructor","olympicService","router","olympics$","yearsOfJo","Set","onSelect","event","label","navigateByUrl","ngOnInit","getOlympics","pipe","value","country","participations","forEach","participation","add","year","subscribe","medal","getMedalCount","_","i0","ɵɵdirectiveInject","i1","OlympicService","i2","Router","_2","selectors","decls","vars","consts","template","HomeComponent_Template","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵelement","ɵɵlistener","HomeComponent_Template_ngx_charts_pie_chart_select_18_listener","$event","ɵɵadvance","ɵɵtextInterpolate","tmp_0_0","ɵɵpipeBind1","length","size","ɵɵproperty","ɵɵpureFunction0","_c0"],"sources":["C:\\Users\\MBD7C62N\\Repo Git\\python\\Developpez-le-front-end-en-utilisant-Angular\\src\\app\\pages\\home\\home.component.ts","C:\\Users\\MBD7C62N\\Repo Git\\python\\Developpez-le-front-end-en-utilisant-Angular\\src\\app\\pages\\home\\home.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { Observable, of,tap,map } from 'rxjs';\r\nimport { OlympicService } from 'app/core/services/olympic.service';\r\nimport { Olympic } from 'app/core/models/olympic';\r\nimport { MedalCount } from 'app/core/models/medal-count';\r\nimport { Router } from '@angular/router';\r\nimport { NgxChartsModule} from '@swimlane/ngx-charts';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\n\r\n\r\n@Component({\r\n  selector: 'app-home',\r\n  templateUrl: './home.component.html',\r\n  styleUrls: ['./home.component.scss'],\r\n})\r\nexport class HomeComponent implements OnInit {\r\n  \r\n\r\n\r\n  public olympics$: Observable<Olympic[]> = of([]);\r\n  public medal!:Observable<MedalCount[]>;\r\n  public yearsOfJo : Set<number> = new Set<number>()\r\n \r\n  public numberCountry!:number\r\n  constructor(private olympicService: OlympicService, private router:Router) {};\r\n\r\n  //fonction pour renvoyer l'utilisateur vers la page contenant les infos du pays\r\n  onSelect(event: any): void {\r\n    if (event.label) { \r\n      //console.log('Chart clicked:', event)  ;\r\n      this.router.navigateByUrl(`country/${event.label}`)\r\n    }else{\r\n      this.router.navigateByUrl(`country/${event}`)\r\n    }\r\n  }\r\n  \r\n  \r\n\r\n  ngOnInit(): void {\r\n\r\n    //nombre de pays\r\n    this.olympics$ = this.olympicService.getOlympics();\r\n\r\n    //nombre de jo\r\n    this.olympics$.pipe(\r\n      map(value => value.map(\r\n        country => country.participations.forEach(participation => {\r\n          this.yearsOfJo.add(participation.year)\r\n        }))\r\n        )\r\n        ).subscribe()\r\n  \r\n   \r\n\r\n   //passer par le async\r\n   this.medal = this.olympicService.getMedalCount()\r\n   \r\n  \r\n   \r\n   \r\n\r\n  }\r\n}\r\n"," <div class=\"container\">\r\n    <!-- Première ligne -->\r\n    <div class=\"row justify-content-center\">\r\n        <div class=\"col-12 d-flex justify-content-center\" >\r\n         <div ><h4 class=\"border text-white rounded p-2\" style=\"background-color: teal;\">Medals per Country</h4>\r\n        </div> \r\n      </div>\r\n    </div>\r\n    <!-- Deuxième ligne -->\r\n    <div class=\"d-flex justify-content-sm-center\">\r\n      <div class=\"p-2 bd-highlight  text-center border border-info rounded m-3\" >Number of entries <br /> <b>{{(olympics$ | async)?.length}}</b> </div>\r\n        <div class=\"p-2 bd-highlight text-center border border-info rounded m-3\" >total number medal <br />  <b>{{yearsOfJo.size}}</b></div>\r\n      </div>\r\n\r\n      \r\n  <ngx-charts-pie-chart class=\"row justify-content-center\"\r\n    [results]=\"medal | async\"\r\n    [legend]=\"false\"\r\n    [labels]=\"true\"\r\n    [view]=[500,300]\r\n    (select)=\"onSelect($event)\"\r\n  >\r\n</ngx-charts-pie-chart>\r\n</div>\r\n\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}