{"ast":null,"code":"import { of, map } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"app/core/services/olympic.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@swimlane/ngx-charts\";\nimport * as i4 from \"@angular/common\";\nexport class HomeComponent {\n  constructor(olympicService, router) {\n    this.olympicService = olympicService;\n    this.router = router;\n    this.olympics$ = of([]);\n    this.yearsOfJo = new Set();\n  }\n  //fonction pour renvoyer l'utilisateur vers la page contenant les infos du pays\n  onSelect(event) {\n    if (event.label) {\n      //console.log('Chart clicked:', event)  ;\n      this.router.navigateByUrl(`country/${event.label}`);\n    } else {\n      this.router.navigateByUrl(`country/${event}`);\n    }\n  }\n  ngOnInit() {\n    //nombre de pays\n    this.olympics$ = this.olympicService.getOlympics();\n    //nombre de jo\n    this.olympics$.pipe(map(value => value.map(country => country.participations.forEach(participation => {\n      this.yearsOfJo.add(participation.year);\n    })))).subscribe();\n    //passer par le async\n    this.medal = this.olympicService.getMedalCount();\n    /* this.olympicService.getMedalCount().subscribe((data) => {\n     this.medal = data\n    })\n    */\n  }\n  static #_ = this.ɵfac = function HomeComponent_Factory(t) {\n    return new (t || HomeComponent)(i0.ɵɵdirectiveInject(i1.OlympicService), i0.ɵɵdirectiveInject(i2.Router));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: HomeComponent,\n    selectors: [[\"app-home\"]],\n    decls: 13,\n    vars: 9,\n    consts: [[1, \"container\"], [1, \"row\", \"justify-content-center\"], [1, \"col-sm\", \"text-center\"], [1, \"container\", \"d-flex\", \"justify-content-center\"], [3, \"results\", \"legend\", \"labels\", \"select\"]],\n    template: function HomeComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2);\n        i0.ɵɵtext(3, \"Medal By Country\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(4, \"div\", 1)(5, \"div\", 2);\n        i0.ɵɵtext(6);\n        i0.ɵɵpipe(7, \"async\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(8, \"div\", 2);\n        i0.ɵɵtext(9);\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(10, \"div\", 3)(11, \"ngx-charts-pie-chart\", 4);\n        i0.ɵɵlistener(\"select\", function HomeComponent_Template_ngx_charts_pie_chart_select_11_listener($event) {\n          return ctx.onSelect($event);\n        });\n        i0.ɵɵpipe(12, \"async\");\n        i0.ɵɵelementEnd()();\n      }\n      if (rf & 2) {\n        let tmp_0_0;\n        i0.ɵɵadvance(6);\n        i0.ɵɵtextInterpolate1(\"Nombre de pays \", (tmp_0_0 = i0.ɵɵpipeBind1(7, 5, ctx.olympics$)) == null ? null : tmp_0_0.length, \"\");\n        i0.ɵɵadvance(3);\n        i0.ɵɵtextInterpolate1(\"Nombre de JO \", ctx.yearsOfJo.size, \"\");\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"results\", i0.ɵɵpipeBind1(12, 7, ctx.medal))(\"legend\", true)(\"labels\", true);\n      }\n    },\n    dependencies: [i3.PieChartComponent, i4.AsyncPipe],\n    styles: [\".bordered[_ngcontent-%COMP%] {\\n  border: 1px solid #ccc;\\n  padding: 2%;\\n  margin-left: auto;\\n  margin-right: 0;\\n}\\n\\np[_ngcontent-%COMP%] {\\n  text-align: center;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvcGFnZXMvaG9tZS9ob21lLmNvbXBvbmVudC5zY3NzIiwid2VicGFjazovLy4vLi4vLi4vLi4vUmVwbyUyMEdpdC9weXRob24vRGV2ZWxvcHBlei1sZS1mcm9udC1lbmQtZW4tdXRpbGlzYW50LUFuZ3VsYXIvc3JjL2FwcC9wYWdlcy9ob21lL2hvbWUuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDSSxzQkFBQTtFQUNBLFdBQUE7RUFFQSxpQkFBQTtFQUNBLGVBQUE7QUNBSjs7QURHRTtFQUNFLGtCQUFBO0FDQUoiLCJzb3VyY2VzQ29udGVudCI6WyIuYm9yZGVyZWQge1xyXG4gICAgYm9yZGVyOiAxcHggc29saWQgI2NjYztcclxuICAgIHBhZGRpbmc6IDIlO1xyXG4gICAgLy9tYXJnaW46IDA7XHJcbiAgICBtYXJnaW4tbGVmdDogYXV0bzsgXHJcbiAgICBtYXJnaW4tcmlnaHQ6IDA7ICAgICAgICBcclxuICB9XHJcblxyXG4gIHAge1xyXG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG59IiwiLmJvcmRlcmVkIHtcbiAgYm9yZGVyOiAxcHggc29saWQgI2NjYztcbiAgcGFkZGluZzogMiU7XG4gIG1hcmdpbi1sZWZ0OiBhdXRvO1xuICBtYXJnaW4tcmlnaHQ6IDA7XG59XG5cbnAge1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG59Il0sInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"names":["of","map","HomeComponent","constructor","olympicService","router","olympics$","yearsOfJo","Set","onSelect","event","label","navigateByUrl","ngOnInit","getOlympics","pipe","value","country","participations","forEach","participation","add","year","subscribe","medal","getMedalCount","_","i0","ɵɵdirectiveInject","i1","OlympicService","i2","Router","_2","selectors","decls","vars","consts","template","HomeComponent_Template","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵlistener","HomeComponent_Template_ngx_charts_pie_chart_select_11_listener","$event","ɵɵadvance","ɵɵtextInterpolate1","tmp_0_0","ɵɵpipeBind1","length","size","ɵɵproperty"],"sources":["C:\\Users\\MBD7C62N\\Repo Git\\python\\Developpez-le-front-end-en-utilisant-Angular\\src\\app\\pages\\home\\home.component.ts","C:\\Users\\MBD7C62N\\Repo Git\\python\\Developpez-le-front-end-en-utilisant-Angular\\src\\app\\pages\\home\\home.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { Observable, of,tap,map } from 'rxjs';\r\nimport { OlympicService } from 'app/core/services/olympic.service';\r\nimport { Olympic } from 'app/core/models/olympic';\r\nimport { MedalCount } from 'app/core/models/medal-count';\r\nimport { Router } from '@angular/router';\r\nimport { NgxChartsModule} from '@swimlane/ngx-charts';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\n\r\n\r\n@Component({\r\n  selector: 'app-home',\r\n  templateUrl: './home.component.html',\r\n  styleUrls: ['./home.component.scss'],\r\n})\r\nexport class HomeComponent implements OnInit {\r\n  \r\n\r\n\r\n  public olympics$: Observable<Olympic[]> = of([]);\r\n  public medal!:Observable<MedalCount[]>;\r\n  public yearsOfJo : Set<number> = new Set<number>()\r\n \r\n  public numberCountry!:number\r\n  constructor(private olympicService: OlympicService, private router:Router) {};\r\n\r\n  //fonction pour renvoyer l'utilisateur vers la page contenant les infos du pays\r\n  onSelect(event: any): void {\r\n    if (event.label) { \r\n      //console.log('Chart clicked:', event)  ;\r\n      this.router.navigateByUrl(`country/${event.label}`)\r\n    }else{\r\n      this.router.navigateByUrl(`country/${event}`)\r\n    }\r\n  }\r\n  \r\n  \r\n\r\n  ngOnInit(): void {\r\n\r\n    //nombre de pays\r\n    this.olympics$ = this.olympicService.getOlympics();\r\n\r\n    //nombre de jo\r\n    this.olympics$.pipe(\r\n      map(value => value.map(\r\n        country => country.participations.forEach(participation => {\r\n          this.yearsOfJo.add(participation.year)\r\n        }))\r\n        )\r\n        ).subscribe()\r\n  \r\n   \r\n\r\n   //passer par le async\r\n   this.medal = this.olympicService.getMedalCount()\r\n   /* this.olympicService.getMedalCount().subscribe((data) => {\r\n    this.medal = data\r\n   })\r\n */\r\n  \r\n   \r\n   \r\n\r\n  }\r\n}\r\n","  <div class=\"container\">\r\n    <!-- Première ligne -->\r\n    <div class=\"row justify-content-center\">\r\n      <div class=\"col-sm text-center\">Medal By Country</div>\r\n    </div>\r\n    <!-- Deuxième ligne -->\r\n    <div class=\"row justify-content-center\">\r\n      <div class=\"col-sm text-center\">Nombre de pays {{ (olympics$ | async)?.length }}</div>\r\n      <div class=\"col-sm text-center\">Nombre de JO {{yearsOfJo.size}}</div>\r\n    </div>\r\n  </div>\r\n\r\n<div class=\"container d-flex justify-content-center\">\r\n<ngx-charts-pie-chart \r\n    [results]=\"medal | async\"\r\n    [legend]=\"true\"\r\n    [labels]=\"true\"\r\n    (select)=\"onSelect($event)\"\r\n></ngx-charts-pie-chart>\r\n</div>"],"mappings":"AACA,SAAqBA,EAAE,EAAKC,GAAG,QAAQ,MAAM;;;;;;AAc7C,OAAM,MAAOC,aAAa;EASxBC,YAAoBC,cAA8B,EAAUC,MAAa;IAArD,KAAAD,cAAc,GAAdA,cAAc;IAA0B,KAAAC,MAAM,GAANA,MAAM;IAL3D,KAAAC,SAAS,GAA0BN,EAAE,CAAC,EAAE,CAAC;IAEzC,KAAAO,SAAS,GAAiB,IAAIC,GAAG,EAAU;EAG0B;EAE5E;EACAC,QAAQA,CAACC,KAAU;IACjB,IAAIA,KAAK,CAACC,KAAK,EAAE;MACf;MACA,IAAI,CAACN,MAAM,CAACO,aAAa,CAAC,WAAWF,KAAK,CAACC,KAAK,EAAE,CAAC;IACrD,CAAC,MAAI;MACH,IAAI,CAACN,MAAM,CAACO,aAAa,CAAC,WAAWF,KAAK,EAAE,CAAC;IAC/C;EACF;EAIAG,QAAQA,CAAA;IAEN;IACA,IAAI,CAACP,SAAS,GAAG,IAAI,CAACF,cAAc,CAACU,WAAW,EAAE;IAElD;IACA,IAAI,CAACR,SAAS,CAACS,IAAI,CACjBd,GAAG,CAACe,KAAK,IAAIA,KAAK,CAACf,GAAG,CACpBgB,OAAO,IAAIA,OAAO,CAACC,cAAc,CAACC,OAAO,CAACC,aAAa,IAAG;MACxD,IAAI,CAACb,SAAS,CAACc,GAAG,CAACD,aAAa,CAACE,IAAI,CAAC;IACxC,CAAC,CAAC,CAAC,CACF,CACA,CAACC,SAAS,EAAE;IAIlB;IACA,IAAI,CAACC,KAAK,GAAG,IAAI,CAACpB,cAAc,CAACqB,aAAa,EAAE;IAChD;;;;EAQD;EAAC,QAAAC,CAAA,G;qBAjDUxB,aAAa,EAAAyB,EAAA,CAAAC,iBAAA,CAAAC,EAAA,CAAAC,cAAA,GAAAH,EAAA,CAAAC,iBAAA,CAAAG,EAAA,CAAAC,MAAA;EAAA;EAAA,QAAAC,EAAA,G;UAAb/B,aAAa;IAAAgC,SAAA;IAAAC,KAAA;IAAAC,IAAA;IAAAC,MAAA;IAAAC,QAAA,WAAAC,uBAAAC,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;QCfxBb,EAAA,CAAAe,cAAA,aAAuB;QAGaf,EAAA,CAAAgB,MAAA,uBAAgB;QAAAhB,EAAA,CAAAiB,YAAA,EAAM;QAGxDjB,EAAA,CAAAe,cAAA,aAAwC;QACNf,EAAA,CAAAgB,MAAA,GAAgD;;QAAAhB,EAAA,CAAAiB,YAAA,EAAM;QACtFjB,EAAA,CAAAe,cAAA,aAAgC;QAAAf,EAAA,CAAAgB,MAAA,GAA+B;QAAAhB,EAAA,CAAAiB,YAAA,EAAM;QAI3EjB,EAAA,CAAAe,cAAA,cAAqD;QAKjDf,EAAA,CAAAkB,UAAA,oBAAAC,+DAAAC,MAAA;UAAA,OAAUN,GAAA,CAAAhC,QAAA,CAAAsC,MAAA,CAAgB;QAAA,EAAC;;QAC9BpB,EAAA,CAAAiB,YAAA,EAAuB;;;;QAXcjB,EAAA,CAAAqB,SAAA,GAAgD;QAAhDrB,EAAA,CAAAsB,kBAAA,qBAAAC,OAAA,GAAAvB,EAAA,CAAAwB,WAAA,OAAAV,GAAA,CAAAnC,SAAA,oBAAA4C,OAAA,CAAAE,MAAA,KAAgD;QAChDzB,EAAA,CAAAqB,SAAA,GAA+B;QAA/BrB,EAAA,CAAAsB,kBAAA,kBAAAR,GAAA,CAAAlC,SAAA,CAAA8C,IAAA,KAA+B;QAMjE1B,EAAA,CAAAqB,SAAA,GAAyB;QAAzBrB,EAAA,CAAA2B,UAAA,YAAA3B,EAAA,CAAAwB,WAAA,QAAAV,GAAA,CAAAjB,KAAA,EAAyB"},"metadata":{},"sourceType":"module","externalDependencies":[]}