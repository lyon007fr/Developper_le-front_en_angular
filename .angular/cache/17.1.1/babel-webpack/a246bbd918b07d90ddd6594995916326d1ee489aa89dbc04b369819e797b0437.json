{"ast":null,"code":"import { map } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"app/core/services/olympic.service\";\nconst _c0 = () => [700, 300];\nexport class CountryComponent {\n  constructor(route, olympicService) {\n    this.route = route;\n    this.olympicService = olympicService;\n    //chartConf\n    this.legend = true;\n    this.showLabels = true;\n    this.animations = true;\n    this.xAxis = true;\n    this.yAxis = true;\n    this.showYAxisLabel = true;\n    this.showXAxisLabel = true;\n    this.xAxisLabel = 'Year';\n    this.yAxisLabel = 'Population';\n    this.timeline = true;\n    this.colorScheme = {\n      domain: ['#5AA454', '#E44D25', '#CFC0BB', '#7aa3e5', '#a8385d', '#aae3f5']\n    };\n  }\n  ngOnInit() {\n    //recuperation de l'info dans l'url\n    const countryLabel = this.route.snapshot.params['country'];\n    //recuperation de l'objet contenant les infos du pays\n    /*     this.olympicService.getOlympics().pipe(tap\n          (data => {this.countryInfo = data.find (value => value.country = countryLabel)})).subscribe()\n     */\n    this.olympicService.getDataByCountry(countryLabel).pipe(map(value => this.chartData = value[0].participations.map(participation => {\n      return {\n        name: participation.year,\n        value: participation.medalsCount\n      };\n    }))).subscribe(value => console.log(this.chartData));\n  }\n  static #_ = this.ɵfac = function CountryComponent_Factory(t) {\n    return new (t || CountryComponent)(i0.ɵɵdirectiveInject(i1.ActivatedRoute), i0.ɵɵdirectiveInject(i2.OlympicService));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: CountryComponent,\n    selectors: [[\"app-country\"]],\n    decls: 5,\n    vars: 13,\n    consts: [[3, \"view\", \"legend\", \"showXAxisLabel\", \"showYAxisLabel\", \"xAxis\", \"yAxis\", \"xAxisLabel\", \"yAxisLabel\", \"timeline\", \"results\"]],\n    template: function CountryComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"p\");\n        i0.ɵɵtext(1);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(2, \"p\");\n        i0.ɵɵtext(3);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(4, \"ngx-charts-line-chart\", 0);\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance();\n        i0.ɵɵtextInterpolate1(\"country works! \", ctx.countryInfo == null ? null : ctx.countryInfo.participations, \"\");\n        i0.ɵɵadvance(2);\n        i0.ɵɵtextInterpolate(ctx.chartData);\n        i0.ɵɵadvance();\n        i0.ɵɵproperty(\"view\", i0.ɵɵpureFunction0(12, _c0))(\"legend\", ctx.legend)(\"showXAxisLabel\", ctx.showXAxisLabel)(\"showYAxisLabel\", ctx.showYAxisLabel)(\"xAxis\", ctx.xAxis)(\"yAxis\", ctx.yAxis)(\"xAxisLabel\", ctx.xAxisLabel)(\"yAxisLabel\", ctx.yAxisLabel)(\"timeline\", ctx.timeline)(\"results\", ctx.chartData);\n      }\n    },\n    styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"names":["map","CountryComponent","constructor","route","olympicService","legend","showLabels","animations","xAxis","yAxis","showYAxisLabel","showXAxisLabel","xAxisLabel","yAxisLabel","timeline","colorScheme","domain","ngOnInit","countryLabel","snapshot","params","getDataByCountry","pipe","value","chartData","participations","participation","name","year","medalsCount","subscribe","console","log","_","i0","ɵɵdirectiveInject","i1","ActivatedRoute","i2","OlympicService","_2","selectors","decls","vars","consts","template","CountryComponent_Template","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵelement","ɵɵadvance","ɵɵtextInterpolate1","countryInfo","ɵɵtextInterpolate","ɵɵproperty","ɵɵpureFunction0","_c0"],"sources":["C:\\Users\\MBD7C62N\\Repo Git\\python\\Developpez-le-front-end-en-utilisant-Angular\\src\\app\\country\\country.component.ts","C:\\Users\\MBD7C62N\\Repo Git\\python\\Developpez-le-front-end-en-utilisant-Angular\\src\\app\\country\\country.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute, OutletContext } from '@angular/router';\r\nimport { Olympic } from 'app/core/models/olympic';\r\nimport { OlympicService } from 'app/core/services/olympic.service';\r\nimport { Observable, filter, map, tap } from 'rxjs';\r\nimport { NgxChartsModule} from '@swimlane/ngx-charts';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\n\r\n\r\n@Component({\r\n  selector: 'app-country',\r\n  templateUrl: './country.component.html',\r\n  styleUrl: './country.component.scss'\r\n})\r\nexport class CountryComponent implements OnInit{\r\n\r\n  public countryInfo!: Olympic | undefined\r\n  public chartData!: {}\r\n\r\n  constructor(private route: ActivatedRoute,\r\n              private olympicService: OlympicService) {}\r\n\r\n\r\n  //chartConf\r\n  \r\n  legend: boolean = true;\r\n  showLabels: boolean = true;\r\n  animations: boolean = true;\r\n  xAxis: boolean = true;\r\n  yAxis: boolean = true;\r\n  showYAxisLabel: boolean = true;\r\n  showXAxisLabel: boolean = true;\r\n  xAxisLabel: string = 'Year';\r\n  yAxisLabel: string = 'Population';\r\n  timeline: boolean = true;\r\n  colorScheme = {\r\n    domain: ['#5AA454', '#E44D25', '#CFC0BB', '#7aa3e5', '#a8385d', '#aae3f5']\r\n  };\r\n\r\n  ngOnInit(): void {\r\n      \r\n    //recuperation de l'info dans l'url\r\n    const countryLabel = this.route.snapshot.params['country']\r\n\r\n    //recuperation de l'objet contenant les infos du pays\r\n\r\n/*     this.olympicService.getOlympics().pipe(tap\r\n      (data => {this.countryInfo = data.find (value => value.country = countryLabel)})).subscribe()\r\n */\r\n       this.olympicService.getDataByCountry(countryLabel).pipe(map(value => this.chartData = value[0].participations.map(participation => {return {\r\n        name:participation.year,\r\n        value:participation.medalsCount}\r\n      }))).subscribe(value => console.log(this.chartData))\r\n  }\r\n\r\n}\r\n","<p>country works! {{countryInfo?.participations}}</p>\r\n\r\n<p>{{ chartData }}</p>\r\n\r\n<ngx-charts-line-chart\r\n  [view]=\"[700, 300]\"\r\n  \r\n  [legend]=\"legend\"\r\n  [showXAxisLabel]=\"showXAxisLabel\"\r\n  [showYAxisLabel]=\"showYAxisLabel\"\r\n  [xAxis]=\"xAxis\"\r\n  [yAxis]=\"yAxis\"\r\n  [xAxisLabel]=\"xAxisLabel\"\r\n  [yAxisLabel]=\"yAxisLabel\"\r\n  [timeline]=\"timeline\"\r\n  [results]=\"chartData\"\r\n  \r\n\r\n  >\r\n</ngx-charts-line-chart>\r\n\r\n"],"mappings":"AAIA,SAA6BA,GAAG,QAAa,MAAM;;;;;AAUnD,OAAM,MAAOC,gBAAgB;EAK3BC,YAAoBC,KAAqB,EACrBC,cAA8B;IAD9B,KAAAD,KAAK,GAALA,KAAK;IACL,KAAAC,cAAc,GAAdA,cAAc;IAGlC;IAEA,KAAAC,MAAM,GAAY,IAAI;IACtB,KAAAC,UAAU,GAAY,IAAI;IAC1B,KAAAC,UAAU,GAAY,IAAI;IAC1B,KAAAC,KAAK,GAAY,IAAI;IACrB,KAAAC,KAAK,GAAY,IAAI;IACrB,KAAAC,cAAc,GAAY,IAAI;IAC9B,KAAAC,cAAc,GAAY,IAAI;IAC9B,KAAAC,UAAU,GAAW,MAAM;IAC3B,KAAAC,UAAU,GAAW,YAAY;IACjC,KAAAC,QAAQ,GAAY,IAAI;IACxB,KAAAC,WAAW,GAAG;MACZC,MAAM,EAAE,CAAC,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS;KAC1E;EAjBoD;EAmBrDC,QAAQA,CAAA;IAEN;IACA,MAAMC,YAAY,GAAG,IAAI,CAACf,KAAK,CAACgB,QAAQ,CAACC,MAAM,CAAC,SAAS,CAAC;IAE1D;IAEJ;;;IAGO,IAAI,CAAChB,cAAc,CAACiB,gBAAgB,CAACH,YAAY,CAAC,CAACI,IAAI,CAACtB,GAAG,CAACuB,KAAK,IAAI,IAAI,CAACC,SAAS,GAAGD,KAAK,CAAC,CAAC,CAAC,CAACE,cAAc,CAACzB,GAAG,CAAC0B,aAAa,IAAG;MAAE,OAAO;QAC1IC,IAAI,EAACD,aAAa,CAACE,IAAI;QACvBL,KAAK,EAACG,aAAa,CAACG;OAAY;IAClC,CAAC,CAAC,CAAC,CAAC,CAACC,SAAS,CAACP,KAAK,IAAIQ,OAAO,CAACC,GAAG,CAAC,IAAI,CAACR,SAAS,CAAC,CAAC;EACxD;EAAC,QAAAS,CAAA,G;qBAvCUhC,gBAAgB,EAAAiC,EAAA,CAAAC,iBAAA,CAAAC,EAAA,CAAAC,cAAA,GAAAH,EAAA,CAAAC,iBAAA,CAAAG,EAAA,CAAAC,cAAA;EAAA;EAAA,QAAAC,EAAA,G;UAAhBvC,gBAAgB;IAAAwC,SAAA;IAAAC,KAAA;IAAAC,IAAA;IAAAC,MAAA;IAAAC,QAAA,WAAAC,0BAAAC,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;QCd7Bb,EAAA,CAAAe,cAAA,QAAG;QAAAf,EAAA,CAAAgB,MAAA,GAA8C;QAAAhB,EAAA,CAAAiB,YAAA,EAAI;QAErDjB,EAAA,CAAAe,cAAA,QAAG;QAAAf,EAAA,CAAAgB,MAAA,GAAe;QAAAhB,EAAA,CAAAiB,YAAA,EAAI;QAEtBjB,EAAA,CAAAkB,SAAA,+BAewB;;;QAnBrBlB,EAAA,CAAAmB,SAAA,EAA8C;QAA9CnB,EAAA,CAAAoB,kBAAA,oBAAAN,GAAA,CAAAO,WAAA,kBAAAP,GAAA,CAAAO,WAAA,CAAA9B,cAAA,KAA8C;QAE9CS,EAAA,CAAAmB,SAAA,GAAe;QAAfnB,EAAA,CAAAsB,iBAAA,CAAAR,GAAA,CAAAxB,SAAA,CAAe;QAGhBU,EAAA,CAAAmB,SAAA,EAAmB;QAAnBnB,EAAA,CAAAuB,UAAA,SAAAvB,EAAA,CAAAwB,eAAA,KAAAC,GAAA,EAAmB,WAAAX,GAAA,CAAA3C,MAAA,oBAAA2C,GAAA,CAAArC,cAAA,oBAAAqC,GAAA,CAAAtC,cAAA,WAAAsC,GAAA,CAAAxC,KAAA,WAAAwC,GAAA,CAAAvC,KAAA,gBAAAuC,GAAA,CAAApC,UAAA,gBAAAoC,GAAA,CAAAnC,UAAA,cAAAmC,GAAA,CAAAlC,QAAA,aAAAkC,GAAA,CAAAxB,SAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}