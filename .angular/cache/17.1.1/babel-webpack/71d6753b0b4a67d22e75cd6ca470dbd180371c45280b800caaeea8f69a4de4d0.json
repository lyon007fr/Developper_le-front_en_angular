{"ast":null,"code":"import { of } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"app/core/services/olympic.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@swimlane/ngx-charts\";\nimport * as i4 from \"@angular/common\";\nexport class HomeComponent {\n  constructor(olympicService, router) {\n    this.olympicService = olympicService;\n    this.router = router;\n    this.olympics$ = of([]);\n  }\n  //fonction pour renvoyer l'utilisateur vers la page contenant les infos du pays\n  onSelect(event) {\n    if (event) {\n      console.log('Chart clicked:', event);\n      this.router.navigateByUrl(`country/${event.label}`);\n    }\n  }\n  ngOnInit() {\n    this.toto = this.olympicService.getNumberOfJos();\n    //this.olympics$ = this.olympicService.getOlympics()\n    //passer par le async\n    this.olympicService.getMedalCount().subscribe(data => {\n      this.medal = data;\n    });\n  }\n  static #_ = this.ɵfac = function HomeComponent_Factory(t) {\n    return new (t || HomeComponent)(i0.ɵɵdirectiveInject(i1.OlympicService), i0.ɵɵdirectiveInject(i2.Router));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: HomeComponent,\n    selectors: [[\"app-home\"]],\n    decls: 7,\n    vars: 6,\n    consts: [[3, \"results\", \"legend\", \"labels\", \"select\"]],\n    template: function HomeComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"h2\");\n        i0.ɵɵtext(1, \"Olympic games app\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(2, \"hr\");\n        i0.ɵɵelementStart(3, \"p\");\n        i0.ɵɵtext(4);\n        i0.ɵɵpipe(5, \"async\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(6, \"ngx-charts-pie-chart\", 0);\n        i0.ɵɵlistener(\"select\", function HomeComponent_Template_ngx_charts_pie_chart_select_6_listener($event) {\n          return ctx.onSelect($event);\n        });\n        i0.ɵɵelementEnd();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(4);\n        i0.ɵɵtextInterpolate1(\"\", i0.ɵɵpipeBind1(5, 4, ctx.toto), \" pays\");\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"results\", ctx.medal)(\"legend\", true)(\"labels\", true);\n      }\n    },\n    dependencies: [i3.PieChartComponent, i4.AsyncPipe],\n    styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"names":["of","HomeComponent","constructor","olympicService","router","olympics$","onSelect","event","console","log","navigateByUrl","label","ngOnInit","toto","getNumberOfJos","getMedalCount","subscribe","data","medal","_","i0","ɵɵdirectiveInject","i1","OlympicService","i2","Router","_2","selectors","decls","vars","consts","template","HomeComponent_Template","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵelement","ɵɵlistener","HomeComponent_Template_ngx_charts_pie_chart_select_6_listener","$event","ɵɵadvance","ɵɵtextInterpolate1","ɵɵpipeBind1","ɵɵproperty"],"sources":["C:\\Users\\MBD7C62N\\Repo Git\\python\\Developpez-le-front-end-en-utilisant-Angular\\src\\app\\pages\\home\\home.component.ts","C:\\Users\\MBD7C62N\\Repo Git\\python\\Developpez-le-front-end-en-utilisant-Angular\\src\\app\\pages\\home\\home.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { Observable, of,tap } from 'rxjs';\r\nimport { OlympicService } from 'app/core/services/olympic.service';\r\nimport { Olympic } from 'app/core/models/olympic';\r\nimport { MedalCount } from 'app/core/models/medal-count';\r\nimport { Router } from '@angular/router';\r\nimport { NgxChartsModule} from '@swimlane/ngx-charts';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\n\r\n\r\n@Component({\r\n  selector: 'app-home',\r\n  templateUrl: './home.component.html',\r\n  styleUrls: ['./home.component.scss'],\r\n})\r\nexport class HomeComponent implements OnInit {\r\n  \r\n\r\n\r\n  public olympics$: Observable<Olympic[]> = of([]);\r\n  public medal!: MedalCount[];\r\n \r\n  public toto!:Observable<number>\r\n  constructor(private olympicService: OlympicService, private router:Router) {};\r\n\r\n  //fonction pour renvoyer l'utilisateur vers la page contenant les infos du pays\r\n  \r\n  onSelect(event: any): void {\r\n    if (event) { \r\n      console.log('Chart clicked:', event);\r\n      this.router.navigateByUrl(`country/${event.label}`)\r\n    }\r\n  }\r\n  \r\n  \r\n\r\n  ngOnInit(): void {\r\n  \r\n    this.toto = this.olympicService.getNumberOfJos()\r\n\r\n    //this.olympics$ = this.olympicService.getOlympics()\r\n\r\n    //passer par le async\r\n   this.olympicService.getMedalCount().subscribe((data) => {\r\n    this.medal = data\r\n   })\r\n\r\n  \r\n   \r\n   \r\n\r\n  }\r\n}\r\n","<h2>Olympic games app</h2>\r\n<hr />\r\n<!-- <p>{{ (medal.length }} data loaded</p> -->\r\n<p>{{ toto | async }} pays</p>\r\n\r\n<ngx-charts-pie-chart \r\n    [results]=\"medal\"\r\n    [legend]=\"true\"\r\n    [labels]=\"true\"\r\n    (select)=\"onSelect($event)\"\r\n></ngx-charts-pie-chart>"],"mappings":"AACA,SAAqBA,EAAE,QAAY,MAAM;;;;;;AAczC,OAAM,MAAOC,aAAa;EAQxBC,YAAoBC,cAA8B,EAAUC,MAAa;IAArD,KAAAD,cAAc,GAAdA,cAAc;IAA0B,KAAAC,MAAM,GAANA,MAAM;IAJ3D,KAAAC,SAAS,GAA0BL,EAAE,CAAC,EAAE,CAAC;EAI4B;EAE5E;EAEAM,QAAQA,CAACC,KAAU;IACjB,IAAIA,KAAK,EAAE;MACTC,OAAO,CAACC,GAAG,CAAC,gBAAgB,EAAEF,KAAK,CAAC;MACpC,IAAI,CAACH,MAAM,CAACM,aAAa,CAAC,WAAWH,KAAK,CAACI,KAAK,EAAE,CAAC;IACrD;EACF;EAIAC,QAAQA,CAAA;IAEN,IAAI,CAACC,IAAI,GAAG,IAAI,CAACV,cAAc,CAACW,cAAc,EAAE;IAEhD;IAEA;IACD,IAAI,CAACX,cAAc,CAACY,aAAa,EAAE,CAACC,SAAS,CAAEC,IAAI,IAAI;MACtD,IAAI,CAACC,KAAK,GAAGD,IAAI;IAClB,CAAC,CAAC;EAMH;EAAC,QAAAE,CAAA,G;qBApCUlB,aAAa,EAAAmB,EAAA,CAAAC,iBAAA,CAAAC,EAAA,CAAAC,cAAA,GAAAH,EAAA,CAAAC,iBAAA,CAAAG,EAAA,CAAAC,MAAA;EAAA;EAAA,QAAAC,EAAA,G;UAAbzB,aAAa;IAAA0B,SAAA;IAAAC,KAAA;IAAAC,IAAA;IAAAC,MAAA;IAAAC,QAAA,WAAAC,uBAAAC,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;QCf1Bb,EAAA,CAAAe,cAAA,SAAI;QAAAf,EAAA,CAAAgB,MAAA,wBAAiB;QAAAhB,EAAA,CAAAiB,YAAA,EAAK;QAC1BjB,EAAA,CAAAkB,SAAA,SAAM;QAENlB,EAAA,CAAAe,cAAA,QAAG;QAAAf,EAAA,CAAAgB,MAAA,GAAuB;;QAAAhB,EAAA,CAAAiB,YAAA,EAAI;QAE9BjB,EAAA,CAAAe,cAAA,8BAKC;QADGf,EAAA,CAAAmB,UAAA,oBAAAC,8DAAAC,MAAA;UAAA,OAAUP,GAAA,CAAA5B,QAAA,CAAAmC,MAAA,CAAgB;QAAA,EAAC;QAC9BrB,EAAA,CAAAiB,YAAA,EAAuB;;;QAPrBjB,EAAA,CAAAsB,SAAA,GAAuB;QAAvBtB,EAAA,CAAAuB,kBAAA,KAAAvB,EAAA,CAAAwB,WAAA,OAAAV,GAAA,CAAArB,IAAA,WAAuB;QAGtBO,EAAA,CAAAsB,SAAA,GAAiB;QAAjBtB,EAAA,CAAAyB,UAAA,YAAAX,GAAA,CAAAhB,KAAA,CAAiB"},"metadata":{},"sourceType":"module","externalDependencies":[]}