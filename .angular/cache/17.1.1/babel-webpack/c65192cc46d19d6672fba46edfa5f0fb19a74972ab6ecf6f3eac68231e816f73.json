{"ast":null,"code":"import { of, map } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"app/core/services/olympic.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"@swimlane/ngx-charts\";\nfunction HomeComponent_div_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 1)(1, \"div\", 7)(2, \"div\", 8)(3, \"div\", 7)(4, \"div\", 8)(5, \"p\");\n    i0.ɵɵtext(6, \"Medal By Country\");\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(7, \"div\", 7)(8, \"div\", 9)(9, \"p\", 10);\n    i0.ɵɵtext(10);\n    i0.ɵɵpipe(11, \"async\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(12, \"div\", 9)(13, \"p\", 10);\n    i0.ɵɵtext(14);\n    i0.ɵɵelementEnd()()()()()();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    let tmp_0_0;\n    i0.ɵɵadvance(10);\n    i0.ɵɵtextInterpolate1(\"Nombre de pays \", (tmp_0_0 = i0.ɵɵpipeBind1(11, 2, ctx_r0.olympics$)) == null ? null : tmp_0_0.length, \"\");\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate1(\"Nombre de JO \", ctx_r0.yearsOfJo.size, \"\");\n  }\n}\nexport class HomeComponent {\n  constructor(olympicService, router) {\n    this.olympicService = olympicService;\n    this.router = router;\n    this.olympics$ = of([]);\n    this.yearsOfJo = new Set();\n  }\n  //fonction pour renvoyer l'utilisateur vers la page contenant les infos du pays\n  onSelect(event) {\n    if (event.label) {\n      //console.log('Chart clicked:', event)  ;\n      this.router.navigateByUrl(`country/${event.label}`);\n    } else {\n      this.router.navigateByUrl(`country/${event}`);\n    }\n  }\n  ngOnInit() {\n    //nombre de pays\n    this.olympics$ = this.olympicService.getOlympics();\n    //nombre de jo\n    this.olympics$.pipe(map(value => value.map(country => country.participations.forEach(participation => {\n      this.yearsOfJo.add(participation.year);\n    })))).subscribe();\n    //passer par le async\n    this.medal = this.olympicService.getMedalCount();\n    /* this.olympicService.getMedalCount().subscribe((data) => {\n     this.medal = data\n    })\n    */\n  }\n  static #_ = this.ɵfac = function HomeComponent_Factory(t) {\n    return new (t || HomeComponent)(i0.ɵɵdirectiveInject(i1.OlympicService), i0.ɵɵdirectiveInject(i2.Router));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: HomeComponent,\n    selectors: [[\"app-home\"]],\n    decls: 14,\n    vars: 6,\n    consts: [[\"class\", \"container\", 4, \"ngIf\"], [1, \"container\"], [1, \"row\", \"justify-content-center\"], [1, \"col-sm\"], [1, \"d-flex\", \"justify-content-center\"], [1, \"p-2\"], [3, \"results\", \"legend\", \"labels\", \"select\"], [1, \"row\"], [1, \"col\", \"s12\"], [1, \"col\", \"s6\"], [1, \"bordered\"]],\n    template: function HomeComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵtemplate(0, HomeComponent_div_0_Template, 15, 4, \"div\", 0);\n        i0.ɵɵelementStart(1, \"div\", 1)(2, \"div\", 2)(3, \"div\", 3);\n        i0.ɵɵtext(4, \"\\u00C9l\\u00E9ment 1\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(5, \"div\", 3);\n        i0.ɵɵtext(6, \"\\u00C9l\\u00E9ment 2\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(7, \"div\", 4)(8, \"div\", 5);\n        i0.ɵɵtext(9, \"Flex item 1\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(10, \"div\", 5);\n        i0.ɵɵtext(11, \"Flex item 2\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(12, \"ngx-charts-pie-chart\", 6);\n        i0.ɵɵlistener(\"select\", function HomeComponent_Template_ngx_charts_pie_chart_select_12_listener($event) {\n          return ctx.onSelect($event);\n        });\n        i0.ɵɵpipe(13, \"async\");\n        i0.ɵɵelementEnd();\n      }\n      if (rf & 2) {\n        i0.ɵɵproperty(\"ngIf\", ctx.medal);\n        i0.ɵɵadvance(12);\n        i0.ɵɵproperty(\"results\", i0.ɵɵpipeBind1(13, 4, ctx.medal))(\"legend\", true)(\"labels\", true);\n      }\n    },\n    dependencies: [i3.NgIf, i4.PieChartComponent, i3.AsyncPipe],\n    styles: [\".bordered[_ngcontent-%COMP%] {\\n  border: 1px solid #ccc;\\n  padding: 2%;\\n  margin-left: auto;\\n  margin-right: 0;\\n}\\n\\np[_ngcontent-%COMP%] {\\n  text-align: center;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvcGFnZXMvaG9tZS9ob21lLmNvbXBvbmVudC5zY3NzIiwid2VicGFjazovLy4vLi4vLi4vLi4vUmVwbyUyMEdpdC9weXRob24vRGV2ZWxvcHBlei1sZS1mcm9udC1lbmQtZW4tdXRpbGlzYW50LUFuZ3VsYXIvc3JjL2FwcC9wYWdlcy9ob21lL2hvbWUuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDSSxzQkFBQTtFQUNBLFdBQUE7RUFFQSxpQkFBQTtFQUNBLGVBQUE7QUNBSjs7QURHRTtFQUNFLGtCQUFBO0FDQUoiLCJzb3VyY2VzQ29udGVudCI6WyIuYm9yZGVyZWQge1xyXG4gICAgYm9yZGVyOiAxcHggc29saWQgI2NjYztcclxuICAgIHBhZGRpbmc6IDIlO1xyXG4gICAgLy9tYXJnaW46IDA7XHJcbiAgICBtYXJnaW4tbGVmdDogYXV0bzsgXHJcbiAgICBtYXJnaW4tcmlnaHQ6IDA7ICAgICAgICBcclxuICB9XHJcblxyXG4gIHAge1xyXG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG59IiwiLmJvcmRlcmVkIHtcbiAgYm9yZGVyOiAxcHggc29saWQgI2NjYztcbiAgcGFkZGluZzogMiU7XG4gIG1hcmdpbi1sZWZ0OiBhdXRvO1xuICBtYXJnaW4tcmlnaHQ6IDA7XG59XG5cbnAge1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG59Il0sInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"names":["of","map","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵtextInterpolate1","tmp_0_0","ɵɵpipeBind1","ctx_r0","olympics$","length","yearsOfJo","size","HomeComponent","constructor","olympicService","router","Set","onSelect","event","label","navigateByUrl","ngOnInit","getOlympics","pipe","value","country","participations","forEach","participation","add","year","subscribe","medal","getMedalCount","_","ɵɵdirectiveInject","i1","OlympicService","i2","Router","_2","selectors","decls","vars","consts","template","HomeComponent_Template","rf","ctx","ɵɵtemplate","HomeComponent_div_0_Template","ɵɵlistener","HomeComponent_Template_ngx_charts_pie_chart_select_12_listener","$event","ɵɵproperty"],"sources":["C:\\Users\\MBD7C62N\\Repo Git\\python\\Developpez-le-front-end-en-utilisant-Angular\\src\\app\\pages\\home\\home.component.ts","C:\\Users\\MBD7C62N\\Repo Git\\python\\Developpez-le-front-end-en-utilisant-Angular\\src\\app\\pages\\home\\home.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { Observable, of,tap,map } from 'rxjs';\r\nimport { OlympicService } from 'app/core/services/olympic.service';\r\nimport { Olympic } from 'app/core/models/olympic';\r\nimport { MedalCount } from 'app/core/models/medal-count';\r\nimport { Router } from '@angular/router';\r\nimport { NgxChartsModule} from '@swimlane/ngx-charts';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\n\r\n\r\n@Component({\r\n  selector: 'app-home',\r\n  templateUrl: './home.component.html',\r\n  styleUrls: ['./home.component.scss'],\r\n})\r\nexport class HomeComponent implements OnInit {\r\n  \r\n\r\n\r\n  public olympics$: Observable<Olympic[]> = of([]);\r\n  public medal!:Observable<MedalCount[]>;\r\n  public yearsOfJo : Set<number> = new Set<number>()\r\n \r\n  public numberCountry!:number\r\n  constructor(private olympicService: OlympicService, private router:Router) {};\r\n\r\n  //fonction pour renvoyer l'utilisateur vers la page contenant les infos du pays\r\n  onSelect(event: any): void {\r\n    if (event.label) { \r\n      //console.log('Chart clicked:', event)  ;\r\n      this.router.navigateByUrl(`country/${event.label}`)\r\n    }else{\r\n      this.router.navigateByUrl(`country/${event}`)\r\n    }\r\n  }\r\n  \r\n  \r\n\r\n  ngOnInit(): void {\r\n\r\n    //nombre de pays\r\n    this.olympics$ = this.olympicService.getOlympics();\r\n\r\n    //nombre de jo\r\n    this.olympics$.pipe(\r\n      map(value => value.map(\r\n        country => country.participations.forEach(participation => {\r\n          this.yearsOfJo.add(participation.year)\r\n        }))\r\n        )\r\n        ).subscribe()\r\n  \r\n   \r\n\r\n   //passer par le async\r\n   this.medal = this.olympicService.getMedalCount()\r\n   /* this.olympicService.getMedalCount().subscribe((data) => {\r\n    this.medal = data\r\n   })\r\n */\r\n  \r\n   \r\n   \r\n\r\n  }\r\n}\r\n","<div class=\"container\" *ngIf=\"medal\">\r\n    <div class=\"row\">\r\n      <div class=\"col s12\">\r\n        <div class=\"row\">\r\n          <div class=\"col s12\">\r\n            <p>Medal By Country</p>\r\n          </div>\r\n        </div>\r\n        <div class=\"row\">\r\n          <div class=\"col s6\">\r\n            <p class=\"bordered\">Nombre de pays {{ (olympics$ | async)?.length }}</p>\r\n          </div>\r\n          <div class=\"col s6\">\r\n            <p class=\"bordered\">Nombre de JO {{yearsOfJo.size}}</p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n\r\n  <div class=\"container\">\r\n    <div class=\"row justify-content-center\">\r\n      <div class=\"col-sm\">Élément 1</div>\r\n      <div class=\"col-sm\">Élément 2</div>\r\n    </div>\r\n  </div>\r\n\r\n  <div class=\"d-flex justify-content-center\">\r\n    <div class=\"p-2\">Flex item 1</div>\r\n    <div class=\"p-2\">Flex item 2</div>\r\n  </div>\r\n\r\n<ngx-charts-pie-chart \r\n    [results]=\"medal | async\"\r\n    [legend]=\"true\"\r\n    [labels]=\"true\"\r\n    (select)=\"onSelect($event)\"\r\n></ngx-charts-pie-chart>\r\n"],"mappings":"AACA,SAAqBA,EAAE,EAAKC,GAAG,QAAQ,MAAM;;;;;;;;ICD7CC,EAAA,CAAAC,cAAA,aAAqC;IAKtBD,EAAA,CAAAE,MAAA,uBAAgB;IAAAF,EAAA,CAAAG,YAAA,EAAI;IAG3BH,EAAA,CAAAC,cAAA,aAAiB;IAEOD,EAAA,CAAAE,MAAA,IAAgD;;IAAAF,EAAA,CAAAG,YAAA,EAAI;IAE1EH,EAAA,CAAAC,cAAA,cAAoB;IACED,EAAA,CAAAE,MAAA,IAA+B;IAAAF,EAAA,CAAAG,YAAA,EAAI;;;;;IAHnCH,EAAA,CAAAI,SAAA,IAAgD;IAAhDJ,EAAA,CAAAK,kBAAA,qBAAAC,OAAA,GAAAN,EAAA,CAAAO,WAAA,QAAAC,MAAA,CAAAC,SAAA,oBAAAH,OAAA,CAAAI,MAAA,KAAgD;IAGhDV,EAAA,CAAAI,SAAA,GAA+B;IAA/BJ,EAAA,CAAAK,kBAAA,kBAAAG,MAAA,CAAAG,SAAA,CAAAC,IAAA,KAA+B;;;ADE/D,OAAM,MAAOC,aAAa;EASxBC,YAAoBC,cAA8B,EAAUC,MAAa;IAArD,KAAAD,cAAc,GAAdA,cAAc;IAA0B,KAAAC,MAAM,GAANA,MAAM;IAL3D,KAAAP,SAAS,GAA0BX,EAAE,CAAC,EAAE,CAAC;IAEzC,KAAAa,SAAS,GAAiB,IAAIM,GAAG,EAAU;EAG0B;EAE5E;EACAC,QAAQA,CAACC,KAAU;IACjB,IAAIA,KAAK,CAACC,KAAK,EAAE;MACf;MACA,IAAI,CAACJ,MAAM,CAACK,aAAa,CAAC,WAAWF,KAAK,CAACC,KAAK,EAAE,CAAC;IACrD,CAAC,MAAI;MACH,IAAI,CAACJ,MAAM,CAACK,aAAa,CAAC,WAAWF,KAAK,EAAE,CAAC;IAC/C;EACF;EAIAG,QAAQA,CAAA;IAEN;IACA,IAAI,CAACb,SAAS,GAAG,IAAI,CAACM,cAAc,CAACQ,WAAW,EAAE;IAElD;IACA,IAAI,CAACd,SAAS,CAACe,IAAI,CACjBzB,GAAG,CAAC0B,KAAK,IAAIA,KAAK,CAAC1B,GAAG,CACpB2B,OAAO,IAAIA,OAAO,CAACC,cAAc,CAACC,OAAO,CAACC,aAAa,IAAG;MACxD,IAAI,CAAClB,SAAS,CAACmB,GAAG,CAACD,aAAa,CAACE,IAAI,CAAC;IACxC,CAAC,CAAC,CAAC,CACF,CACA,CAACC,SAAS,EAAE;IAIlB;IACA,IAAI,CAACC,KAAK,GAAG,IAAI,CAAClB,cAAc,CAACmB,aAAa,EAAE;IAChD;;;;EAQD;EAAC,QAAAC,CAAA,G;qBAjDUtB,aAAa,EAAAb,EAAA,CAAAoC,iBAAA,CAAAC,EAAA,CAAAC,cAAA,GAAAtC,EAAA,CAAAoC,iBAAA,CAAAG,EAAA,CAAAC,MAAA;EAAA;EAAA,QAAAC,EAAA,G;UAAb5B,aAAa;IAAA6B,SAAA;IAAAC,KAAA;IAAAC,IAAA;IAAAC,MAAA;IAAAC,QAAA,WAAAC,uBAAAC,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;QCf1BhD,EAAA,CAAAkD,UAAA,IAAAC,4BAAA,kBAkBQ;QAGNnD,EAAA,CAAAC,cAAA,aAAuB;QAECD,EAAA,CAAAE,MAAA,0BAAS;QAAAF,EAAA,CAAAG,YAAA,EAAM;QACnCH,EAAA,CAAAC,cAAA,aAAoB;QAAAD,EAAA,CAAAE,MAAA,0BAAS;QAAAF,EAAA,CAAAG,YAAA,EAAM;QAIvCH,EAAA,CAAAC,cAAA,aAA2C;QACxBD,EAAA,CAAAE,MAAA,kBAAW;QAAAF,EAAA,CAAAG,YAAA,EAAM;QAClCH,EAAA,CAAAC,cAAA,cAAiB;QAAAD,EAAA,CAAAE,MAAA,mBAAW;QAAAF,EAAA,CAAAG,YAAA,EAAM;QAGtCH,EAAA,CAAAC,cAAA,+BAKC;QADGD,EAAA,CAAAoD,UAAA,oBAAAC,+DAAAC,MAAA;UAAA,OAAUL,GAAA,CAAA/B,QAAA,CAAAoC,MAAA,CAAgB;QAAA,EAAC;;QAC9BtD,EAAA,CAAAG,YAAA,EAAuB;;;QAtCAH,EAAA,CAAAuD,UAAA,SAAAN,GAAA,CAAAhB,KAAA,CAAW;QAkC/BjC,EAAA,CAAAI,SAAA,IAAyB;QAAzBJ,EAAA,CAAAuD,UAAA,YAAAvD,EAAA,CAAAO,WAAA,QAAA0C,GAAA,CAAAhB,KAAA,EAAyB"},"metadata":{},"sourceType":"module","externalDependencies":[]}