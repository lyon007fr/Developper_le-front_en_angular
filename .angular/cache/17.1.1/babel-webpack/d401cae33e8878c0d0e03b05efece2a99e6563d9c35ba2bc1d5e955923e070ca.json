{"ast":null,"code":"import { of } from 'rxjs';\nimport { catchError, tap } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"app/core/services/olympic.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"@swimlane/ngx-charts\";\nfunction HomeComponent_div_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 2);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate1(\" \", ctx_r0.errorMessage, \" \");\n  }\n}\nfunction HomeComponent_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\")(1, \"div\", 3)(2, \"div\", 4)(3, \"div\", 5);\n    i0.ɵɵtext(4, \"Medal By Country\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(5, \"div\", 4)(6, \"div\", 6);\n    i0.ɵɵtext(7, \"Nombre de pays \");\n    i0.ɵɵelement(8, \"br\");\n    i0.ɵɵelementStart(9, \"b\");\n    i0.ɵɵtext(10);\n    i0.ɵɵpipe(11, \"async\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(12, \"div\", 6);\n    i0.ɵɵtext(13, \"Nombre de JO \");\n    i0.ɵɵelement(14, \"br\");\n    i0.ɵɵelementStart(15, \"b\");\n    i0.ɵɵtext(16);\n    i0.ɵɵelementEnd()()()();\n    i0.ɵɵelementStart(17, \"ngx-charts-pie-chart\", 7);\n    i0.ɵɵlistener(\"select\", function HomeComponent_div_1_Template_ngx_charts_pie_chart_select_17_listener($event) {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.onSelect($event));\n    });\n    i0.ɵɵpipe(18, \"async\");\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    let tmp_0_0;\n    i0.ɵɵadvance(10);\n    i0.ɵɵtextInterpolate((tmp_0_0 = i0.ɵɵpipeBind1(11, 5, ctx_r1.olympics$)) == null ? null : tmp_0_0.length);\n    i0.ɵɵadvance(6);\n    i0.ɵɵtextInterpolate(ctx_r1.yearsOfJo.size);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"results\", i0.ɵɵpipeBind1(18, 7, ctx_r1.medal$))(\"legend\", true)(\"labels\", true);\n  }\n}\nexport class HomeComponent {\n  constructor(olympicService, router) {\n    this.olympicService = olympicService;\n    this.router = router;\n    this.olympics$ = of([]);\n    this.yearsOfJo = new Set();\n    this.errorMessage = '';\n  }\n  //fonction pour renvoyer l'utilisateur vers la page contenant les infos du pays\n  onSelect(event) {\n    if (event.label) {\n      //console.log('Chart clicked:', event)  ;\n      this.router.navigateByUrl(`country/${event.label}`);\n    } else {\n      this.router.navigateByUrl(`country/${event}`);\n    }\n  }\n  ngOnInit() {\n    //nombre de pays\n    this.olympics$ = this.olympicService.getOlympics().pipe(catchError(error => {\n      this.errorMessage = 'Une erreur est survenue lors du chargement des données olympiques.';\n      return [];\n    }));\n    //nombre de jo\n    this.olympics$.pipe(tap(value => {\n      value.forEach(country => {\n        country.participations.forEach(participation => {\n          this.yearsOfJo.add(participation.year);\n        });\n      });\n    }), catchError(error => {\n      this.errorMessage = 'Une erreur est survenue lors du traitement des années de participation.';\n      return [];\n    })).subscribe();\n    this.medal = this.olympicService.getMedalCount().pipe(catchError(error => {\n      this.errorMessage = 'Une erreur est survenue lors du chargement des données de médailles.';\n      return [];\n    }));\n  }\n  static #_ = this.ɵfac = function HomeComponent_Factory(t) {\n    return new (t || HomeComponent)(i0.ɵɵdirectiveInject(i1.OlympicService), i0.ɵɵdirectiveInject(i2.Router));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: HomeComponent,\n    selectors: [[\"app-home\"]],\n    decls: 2,\n    vars: 2,\n    consts: [[\"class\", \"alert alert-danger\", 4, \"ngIf\"], [4, \"ngIf\"], [1, \"alert\", \"alert-danger\"], [1, \"container\"], [1, \"row\", \"justify-content-center\"], [1, \"col-sm\", \"text-center\", \"rounded\", 2, \"padding\", \"10px\", \"border\", \"2px solid teal\", \"margin\", \"10px\", \"background-color\", \"teal\"], [1, \"col-sm\", \"text-center\", \"rounded\", 2, \"border\", \"1px solid teal\", \"margin\", \"10px\"], [3, \"results\", \"legend\", \"labels\", \"select\"]],\n    template: function HomeComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵtemplate(0, HomeComponent_div_0_Template, 2, 1, \"div\", 0)(1, HomeComponent_div_1_Template, 19, 9, \"div\", 1);\n      }\n      if (rf & 2) {\n        i0.ɵɵproperty(\"ngIf\", ctx.errorMessage);\n        i0.ɵɵadvance();\n        i0.ɵɵproperty(\"ngIf\", !ctx.errorMessage);\n      }\n    },\n    dependencies: [i3.NgIf, i4.PieChartComponent, i3.AsyncPipe],\n    styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"names":["of","catchError","tap","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵtextInterpolate1","ctx_r0","errorMessage","ɵɵelement","ɵɵlistener","HomeComponent_div_1_Template_ngx_charts_pie_chart_select_17_listener","$event","ɵɵrestoreView","_r3","ctx_r2","ɵɵnextContext","ɵɵresetView","onSelect","ɵɵtextInterpolate","tmp_0_0","ɵɵpipeBind1","ctx_r1","olympics$","length","yearsOfJo","size","ɵɵproperty","medal$","HomeComponent","constructor","olympicService","router","Set","event","label","navigateByUrl","ngOnInit","getOlympics","pipe","error","value","forEach","country","participations","participation","add","year","subscribe","medal","getMedalCount","_","ɵɵdirectiveInject","i1","OlympicService","i2","Router","_2","selectors","decls","vars","consts","template","HomeComponent_Template","rf","ctx","ɵɵtemplate","HomeComponent_div_0_Template","HomeComponent_div_1_Template"],"sources":["C:\\Users\\MBD7C62N\\Repo Git\\python\\Developpez-le-front-end-en-utilisant-Angular\\src\\app\\pages\\home\\home.component.ts","C:\\Users\\MBD7C62N\\Repo Git\\python\\Developpez-le-front-end-en-utilisant-Angular\\src\\app\\pages\\home\\home.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { Observable, throwError, of } from 'rxjs';\r\nimport { catchError, tap, map } from 'rxjs/operators';\r\nimport { OlympicService } from 'app/core/services/olympic.service';\r\nimport { Olympic } from 'app/core/models/olympic';\r\nimport { MedalCount } from 'app/core/models/medal-count';\r\nimport { Router } from '@angular/router';\r\nimport { NgxChartsModule} from '@swimlane/ngx-charts';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\n\r\n\r\n@Component({\r\n  selector: 'app-home',\r\n  templateUrl: './home.component.html',\r\n  styleUrls: ['./home.component.scss'],\r\n})\r\nexport class HomeComponent implements OnInit {\r\n  \r\n\r\n\r\n  public olympics$: Observable<Olympic[]> = of([]);\r\n  public medal!:Observable<MedalCount[]>;\r\n  public yearsOfJo : Set<number> = new Set<number>()\r\n  public numberCountry!:number\r\n  public errorMessage: string = '';\r\n\r\n\r\n  constructor(private olympicService: OlympicService, private router:Router) {};\r\n\r\n  //fonction pour renvoyer l'utilisateur vers la page contenant les infos du pays\r\n  onSelect(event: any): void {\r\n    if (event.label) { \r\n      //console.log('Chart clicked:', event)  ;\r\n      this.router.navigateByUrl(`country/${event.label}`)\r\n    }else{\r\n      this.router.navigateByUrl(`country/${event}`)\r\n    }\r\n  }\r\n  \r\n  \r\n\r\n  ngOnInit(): void {\r\n\r\n   //nombre de pays\r\n   this.olympics$ = this.olympicService.getOlympics().pipe(\r\n    catchError((error) => {\r\n      this.errorMessage = 'Une erreur est survenue lors du chargement des données olympiques.';\r\n      return [];\r\n    })\r\n  );\r\n\r\n  //nombre de jo\r\n  this.olympics$.pipe(\r\n    tap((value) => {\r\n      value.forEach((country) => {\r\n        country.participations.forEach((participation) => {\r\n          this.yearsOfJo.add(participation.year);\r\n        });\r\n      });\r\n    }),\r\n    catchError((error) => {\r\n      this.errorMessage = 'Une erreur est survenue lors du traitement des années de participation.';\r\n      return [];\r\n    })\r\n  ).subscribe();\r\n\r\n  this.medal = this.olympicService.getMedalCount().pipe(\r\n    catchError((error) => {\r\n      this.errorMessage = 'Une erreur est survenue lors du chargement des données de médailles.';\r\n      return [];\r\n    })\r\n  );\r\n}\r\n}\r\n\r\n","\r\n  <div *ngIf=\"errorMessage\" class=\"alert alert-danger\">\r\n    {{ errorMessage }}\r\n  </div>\r\n  \r\n  <div *ngIf=\"!errorMessage\">\r\n    <div class=\"container\">\r\n      <!-- Première ligne -->\r\n      <div class=\"row justify-content-center\">\r\n          <div class=\"col-sm text-center rounded\" style=\"padding: 10px;border: 2px solid teal; margin: 10px; background-color: teal;\">Medal By Country</div>\r\n      </div>\r\n      <!-- Deuxième ligne -->\r\n      <div class=\"row justify-content-center\">\r\n          <div class=\"col-sm text-center rounded\" style=\"border: 1px solid teal; margin: 10px;\">Nombre de pays <br /> <b>{{ (olympics$ | async)?.length }}</b></div>\r\n          <div class=\"col-sm text-center rounded\" style=\"border: 1px solid teal; margin: 10px;\">Nombre de JO <br /> <b>{{yearsOfJo.size}}</b></div>\r\n      </div>\r\n  </div>\r\n\r\n\r\n\r\n\r\n  \r\n    <ngx-charts-pie-chart \r\n      [results]=\"medal$ | async\"\r\n      [legend]=\"true\"\r\n      [labels]=\"true\"\r\n      (select)=\"onSelect($event)\"\r\n    ></ngx-charts-pie-chart>\r\n\r\n  \r\n  \r\n</div>\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}